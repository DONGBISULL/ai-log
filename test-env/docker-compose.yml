version: "3.8"
services:
  demo-app:
    build:
      context: .
      dockerfile: Dockerfile.demo-app
    container_name: demo-app
    volumes:
      - ./logs:/log/demo-app
    entrypoint: >
      sh -c "chmod -R 777 /log/demo-app && java -Dlogging.config=classpath:logback-spring.xml -jar /app.jar"
    ports:
      - "8080:8080"
    restart: unless-stopped # Docker 데몬이 재시작될 때 컨테이너도 재시작되도록 됨

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.13.4
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs:/log/demo-app
      - ./filebeat/entrypoint.sh:/usr/local/bin/entrypoint.sh
    entrypoint: ["/bin/sh", "/usr/local/bin/entrypoint.sh"]
    depends_on:
      - demo-app
      - kafka
    restart: always
  # 주키퍼 - 토픽 (전달받는 데이터) 브로커 정보 저장
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      # 주키퍼가 카프카보다 먼저 켜져야 함
      ZOOKEEPER_TICK_TIME: 2000
    restart: always
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ## PLAINTEXT_HOST 리스너 이름 (통신용 암호화 X)
      ## PLAINTEXT_HOST:PLAINTEXT : 사용자 지정 리스너 이름 => 외부 접근 위해 만든 별도의 리스너
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://192.168.68.60:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    # 주키퍼가 카프카보다 먼저 켜져야 함
    # 추후 오류 계속 될 경우 쉘 스크립트 작성해야함
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: always

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    restart: always
